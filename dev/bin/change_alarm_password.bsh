#!/usr/bin/sh
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
#
# (c) Ericsson Radio Systems AB 2018 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson Radio Systems AB, Sweden. The programs may be used 
# and/or copied only with the written permission from Ericsson Radio 
# Systems AB or in accordance with the terms and conditions stipulated 
# in the agreement/contract under which the program(s) have been 
# supplied.
#
# ********************************************************************
# Name    : change_alarm_password.bsh
# Date    : 12/12/2019
# Purpose : Script to change alarm password
# Usage   : ./change_alarm_password.bsh
# Author  : Jagrata Roy
# ********************************************************************

TIMESTAMP=`date +%d.%m.%Y`

LOGFILE=/eniq/log/sw_log/engine/change_alarm_password_${TIMESTAMP}.log


EchoText() {
   echo -e $*
   echo -e `date '+%Y-%m-%d %H:%M:%S': ` $* >> ${LOGFILE}
}

if [ ${LOGNAME} != "dcuser"  ] ; then
  EchoText "This script must be executed as dcuser"
  exit 1
fi

### Function: usage_msg ###
#
# Print out the usage message
#
# Arguments: none
#
# Return Values:none
#
usage_msg() 
{
EchoText "\n"
EchoText "Usage: `basename $0`"
}

### Function: rules ###
#
# Rules defined to change the password
#
# Arguments: none
#
# Return Values: none
policies()
{
EchoText "\nPassword Policies:
\n** Following special characters are not allowed in password \` ^ { } [ ] \ # $ % & ( ) + ; . < > \" ! ?
\n** All alphanumeric characters allowed.
\n** Ensure your password contains at least one upper case and lower case letter.
\n** No spaces allowed.
"
}

################## Main Body ##################

if [ "$#" -ne 0 ]; then
  usage_msg
  EchoText "\n"
  EchoText "Illegal number of parameters. Exiting..."
  exit 2
fi

if [ ! -r "${CONF_DIR}/niq.rc" ] ; then
  EchoText "ERROR: Source file is not readable at ${CONF_DIR}/niq.rc"
  exit 1
fi

. ${CONF_DIR}/niq.rc

policies

_attempts_=3

while [ ${_attempts_} -gt 0 ]
  do
    ((_attempts_--))

    EchoText "Enter the new password:"
    read -rs NEW_PASSWORD
    password_length=${#NEW_PASSWORD}

    if  [ -z "${NEW_PASSWORD}" ] ; then
      EchoText "The new password cannot be empty."
	elif [[ "${NEW_PASSWORD}" =~ ^.*[[:space:]]+.*$ ]] ; then
	  EchoText "The new password cannot contain white spaces."
	elif ! [[ "${NEW_PASSWORD}" =~ ^.*[a-z]+.*$ ]] ; then
      EchoText "The new password entered is not compliant with the Password Policies defined. It should contain at least one lower case letter."
	elif ! [[ "${NEW_PASSWORD}" =~ ^.*[A-Z]+.*$ ]] ; then
      EchoText "The new password entered is not compliant with the Password Policies defined. It should contain at least one upper case letter."
    elif [[ "${NEW_PASSWORD}" =~ ^.*[]\\#$%\&\(\)+\;.\<\>\"\!?\{\}\[\`\^]+.*$ ]] ; then 
	  EchoText "The new password entered is not compliant with the Password Policies. It contains restricted characters."; 
    ## elif [ ${password_length} -lt 5 -o ${password_length} -gt 30 ]; then
      ## echo "The new password length should be not less than 5 characters or greater than 30 characters."
    else
      break
    fi

    if [ ${_attempts_} -eq 0 ]; then
      EchoText "\n"
      EchoText "You have exhausted 3 attempts to set the new password and none of the passwords seemed to be compliant with the password policy. Hence exiting..."
      exit 3
    fi
done

DIRS=`ls ${PLATFORM_DIR}`

for file in $DIRS
do
  if [ -d ${PLATFORM_DIR}/$file/dclib ]
  then
    JARS=`ls ${PLATFORM_DIR}/$file/dclib/*.jar`

    for jar in $JARS
    do
      CPATH="${CPATH}:${jar}"
    done
  fi
done


CURRENT_WORKING_DIRECTORY=`pwd`
JAVA_HOME=${RT_DIR}/java
export JAVA_HOME

# Change the password.
${RT_DIR}/ant/bin/ant -f alarm_utils.xml -lib ${CPATH} -Ddc.bin.dir=${BIN_DIR} -DnewAlarmPassword=${NEW_PASSWORD} change_alarm_password >> ${LOGFILE}

exit_code=$?

if [ $exit_code -ne 0 ]; then
  EchoText "Failed to change the alarm password."
else
  EchoText "Alarm password changed successfully."
fi

exit $exit_code